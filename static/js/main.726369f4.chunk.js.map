{"version":3,"sources":["componants/Services.js","componants/Second.js","componants/RegistrationForm.js","App.js","componants/About.js","componants/Training.js","componants/Career.js","componants/Contact.js","componants/Notfound.js","serviceWorker.js","index.js"],"names":["Services","className","Component","Second","RegistrationForm","props","htmlFor","type","id","aria-describedby","placeholder","App","About","Training","Career","Contact","Notfound","Boolean","window","location","hostname","match","routing","to","exact","activeStyle","color","path","component","Home","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uTAagBA,G,uLART,OACG,yBAAKC,UAAU,iBACd,mE,GAJYC,cCYPC,E,iLAXT,OACG,6BACI,gf,GAJOD,aCuCNE,MAxCf,SAA0BC,GACxB,OACM,yBAAKJ,UAAU,kDACX,8BACI,yBAAKA,UAAU,wBACf,2BAAOK,QAAQ,sBAAf,iBACA,2BAAOC,KAAK,QACLN,UAAU,eACVO,GAAG,QACHC,mBAAiB,YACjBC,YAAY,gBAEnB,2BAAOF,GAAG,YAAYP,UAAU,wBAAhC,mDAEA,yBAAKA,UAAU,wBACX,2BAAOK,QAAQ,yBAAf,YACA,2BAAOC,KAAK,WACRN,UAAU,eACVO,GAAG,WACHE,YAAY,cAGpB,yBAAKT,UAAU,wBACX,2BAAOK,QAAQ,yBAAf,oBACA,2BAAOC,KAAK,WACRN,UAAU,eACVO,GAAG,kBACHE,YAAY,sBAGpB,4BACIH,KAAK,SACLN,UAAU,mBAFd,eCHDU,E,iLAlBT,OACG,6BACG,kBAAC,EAAD,MACD,yBAAKV,UAAU,KAEf,kBAAC,EAAD,Y,GAPOC,aCiBFU,G,uLApBT,OACG,yBAAKX,UAAU,aACf,yBAAKA,UAAU,QACb,2BACA,2CADA,2gB,GALQC,cCSJW,E,iLATT,OACG,yBAAKZ,UAAU,iBACZ,mE,GAJUC,aCUPY,E,iLART,OACG,yBAAKb,UAAU,eACZ,6D,GAJQC,aCULa,E,iLART,OACG,yBAAKd,UAAU,gBACZ,iE,GAJSC,aCCPc,EADE,kBAAM,0CCWHC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCSN,IAAMC,EACF,kBAAC,IAAD,KACE,yBAAKrB,UAAU,QAEb,4BACE,4BACE,kBAAC,IAAD,CAASsB,GAAG,IAAIC,OAAK,EAACC,YACnB,CAACC,MAAM,QADV,SAIF,4BACE,kBAAC,IAAD,CAASH,GAAG,SAASC,OAAK,EAACC,YACxB,CAACC,MAAM,UADV,aAIF,4BACE,kBAAC,IAAD,CAASH,GAAG,YAAYC,OAAK,EAACC,YAC3B,CAACC,MAAM,YADV,aAIF,4BACE,kBAAC,IAAD,CAASH,GAAG,YAAYC,OAAK,EAACC,YAC3B,CAACC,MAAM,YADV,aAIF,4BACE,kBAAC,IAAD,CAASH,GAAG,UAAUC,OAAK,EAACC,YACzB,CAACC,MAAM,YADV,WAIF,4BACE,kBAAC,IAAD,CAASH,GAAG,WAAWC,OAAK,EAACC,YAC1B,CAACC,MAAM,YADV,gBAMH,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOF,OAAK,EAACG,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOL,OAAK,EAACG,KAAK,SAASC,UAAWC,IACvC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWhB,IAChC,kBAAC,IAAD,CAAOe,KAAK,YAAYC,UAAW5B,IACnC,kBAAC,IAAD,CAAO2B,KAAK,UAAUC,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,YAAYC,UAAWf,IACnC,kBAAC,IAAD,CAAOc,KAAK,WAAWC,UAAWb,IAClC,kBAAC,IAAD,CAAOa,UAAWZ,OAM1Bc,IAASC,OAAOT,EAASU,SAASC,eAAe,SDqD3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.726369f4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom'  \r\n//const Contacts = ({ match }) => <p>{match.params.id}</p> \r\nclass Services extends Component {  \r\n    render() {  \r\n       return (  \r\n          <div className='services-page'>  \r\n           <h1> Services  US componant works </h1>  \r\n          </div>  \r\n       );  \r\n    }  \r\n }  \r\n \r\n export default Services; ","import React, { Component } from 'react'; \r\n\r\nclass Second extends Component {  \r\n    render() {  \r\n       return (  \r\n          <div>  \r\n              <p>  Friends Infotech is a global IT solutions provider based in the USA.The company focuses majorly into providing Software Development Testing  Consulting and Training Solutions .\r\n\r\n              We are Agile. We are always present with the right solutions at the right place and the right time to meet your requirements. Our offerings are IP oriented, tried and tested over time.\r\n               We strive to ensure that our Clients are the front runners and equipped with latest technologies</p>\r\n\r\n          </div>  \r\n       );  \r\n    }  \r\n }  \r\n export default Second;","import React, {useState} from 'react';\r\nfunction RegistrationForm(props) {\r\n  return(\r\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\r\n            <form>\r\n                <div className=\"form-group text-left\">\r\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\r\n                <input type=\"email\" \r\n                       className=\"form-control\" \r\n                       id=\"email\" \r\n                       aria-describedby=\"emailHelp\" \r\n                       placeholder=\"Enter email\"\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"password\" \r\n                        placeholder=\"Password\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group text-left\">\r\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\r\n                    <input type=\"password\" \r\n                        className=\"form-control\" \r\n                        id=\"confirmPassword\" \r\n                        placeholder=\"Confirm Password\"\r\n                    />\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"btn btn-primary\"\r\n                >\r\n                    Register\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default RegistrationForm","import React, { Component } from 'react'; \n\nimport './App.css';\n//import First from './componants/First'\n////import Nav from './componants/Nav'\nimport Product from './componants/Services'\nimport Second from './componants/Second'\nimport RegistrationForm from './componants/RegistrationForm'\nclass App extends Component {  \n   render() {  \n      return (  \n         <div >\n            <RegistrationForm/>\n           <div className='p'>\n\n           <Second />\n           </div>\n\n        \n           \n           \n         </div> \n          \n      );  \n   }  \n}  \n\n\nexport default App;  \n","import React, { Component } from 'react';\r\nimport  './mystyle.css';\r\n\r\nclass About extends Component {  \r\n    render() {  \r\n       return (  \r\n          <div className='aboutpage'> \r\n          <div className='pppp'> \r\n            <p>\r\n            <h1>Who we are </h1>\r\n\r\n            Friends Infotech is a global IT and Engineering solutions provider catering to a diverse customer base.\r\n             We ensure to empower our clients with innovative solutions that add measurable value to business,\r\n              while adhering to global quality standards. We offer an optimal blend of business processes in \r\n              varied domains to enable our customers to meet their corporate goals. Our combination of deep \r\n              industry knowledge and expertise in building capabilities on short notice makes us a strategic \r\n              partner for our customers. </p>\r\n\r\n             \r\n            </div> \r\n          </div>  \r\n       );  \r\n    }  \r\n }  \r\n \r\n export default About; ","import React, { Component } from 'react';\r\nclass Training extends Component {  \r\n    render() {  \r\n       return (  \r\n          <div className='training-page'>  \r\n             <h1> Training  US componant works </h1>  \r\n          </div>  \r\n       );  \r\n    }  \r\n }  \r\n \r\n\r\n export default Training;  ","import React, { Component } from 'react';\r\nclass Career extends Component {  \r\n    render() {  \r\n       return (  \r\n          <div className='career-page'>  \r\n             <h1> Career componant works </h1>  \r\n          </div>  \r\n       );  \r\n    }  \r\n }  \r\n \r\n export default Career; ","import React, { Component } from 'react';\r\nclass Contact extends Component {  \r\n    render() {  \r\n       return (  \r\n          <div className='contact-page'>  \r\n             <h1> Contact US componant works </h1>  \r\n          </div>  \r\n       );  \r\n    }  \r\n }  \r\n \r\n export default Contact; ","import React from 'react'  \r\nconst Notfound = () => <h1>Not found</h1>  \r\nexport default Notfound ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';  \n\n\nimport { BrowserRouter as Router, Route, NavLink, Switch } from 'react-router-dom'  \n  \n\nimport './index.css';\nimport Home from './App';\nimport About from './componants/About'\nimport Training from './componants/Training'\nimport Services from './componants/Services'\nimport Career from './componants/Career'\nimport Contact from './componants/Contact'\nimport Notfound from './componants/Notfound' \n \nimport * as serviceWorker from './serviceWorker';\n\n//const Home = lazy(() => import('./App'));  \n//const About = lazy(() => import('./componants/About'));  \n//const Training = lazy(() => import('./componants/Training'));\n\n\n\n\n\n\nconst routing = (  \n    <Router>  \n      <div className='Nava'>  \n       \n        <ul>  \n          <li>  \n            <NavLink to=\"/\" exact activeStyle={  \n               {color:'red'}  \n            }>HOME</NavLink>  \n          </li>  \n          <li>  \n            <NavLink to=\"/About\" exact activeStyle={  \n               {color:'green'}  \n            }>ABOUT US</NavLink>  \n          </li>  \n          <li>  \n            <NavLink to=\"/Services\" exact activeStyle={  \n               {color:'magenta'}  \n            }>SERVICES</NavLink>  \n          </li> \n          <li>  \n            <NavLink to=\"/Training\" exact activeStyle={  \n               {color:'magenta'}  \n            }>TRAINING</NavLink>  \n          </li> \n          <li>  \n            <NavLink to=\"/Career\" exact activeStyle={  \n               {color:'magenta'}  \n            }>CAREER</NavLink>  \n          </li> \n          <li>  \n            <NavLink to=\"/Contact\" exact activeStyle={  \n               {color:'magenta'}  \n            }>CONTACT US</NavLink>  \n          </li>  \n        </ul> \n         \n         <Switch> \n         <Route exact path=\"/\" component={Home} />\n         <Route exact path=\"/MyApp\" component={Home} />  \n        <Route path=\"/About\" component={About} />  \n        <Route path=\"/Services\" component={Services} /> \n        <Route path=\"/Career\" component={Career} />\n        <Route path=\"/Training\" component={Training} />\n        <Route path=\"/Contact\" component={Contact} />  \n        <Route component={Notfound} />  \n      </Switch>\n       \n    </div>  \n  </Router>  \n)  \nReactDOM.render(routing, document.getElementById('root')); \n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}